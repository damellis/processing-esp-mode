<project name="esp-mode" default="install">

  <property file="local.properties" />

  <condition property="props.present">
    <available file="local.properties" />
  </condition>

  <fail unless="props.present" 
        message=" ${line.separator}Missing file.
${line.separator}Create a file named local.properties inside the dist folder,
${line.separator}and write a line that reads:
${line.separator}processing.dir=/path/to/processing-git
${line.separator}with the path to where you have the code for processing checked out
${line.separator}and another line that reads:
${line.separator}sketchbook.dir=/path/to/your/sketchbook" />

  <property name="me" value="ESPMode" />
  
  <property name="install.dir" 
            value="${sketchbook.dir}/modes/${me}" />

  <property name="jar.path"
            value="mode/${me}.jar" />

  <property name="dist.path"
            value="${me}.zip" />


  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

  <target name="build">

    <!-- Locate the JDT compiler, since we know processing.dir must exist and
         using the JDT allows us to build the PDE with only a JRE on Windows
         and Linux. If something goes wrong, javac (the "modern" compiler)
         will be used instead. (Logic from processing/core/build.xml) -->
    <property name="jdt.jar"
              value="${processing.dir}/java/mode/org.eclipse.jdt.core.jar" />
    <condition property="build.compiler" 
	       value="org.eclipse.jdt.core.JDTCompilerAdapter"
	       else="modern">
      <available file="${jdt.jar}" />
    </condition>
    <!--<echo message="compiler is ${build.compiler}" />-->

    <mkdir dir="bin" />
    <javac source="1.8"
	   target="1.8"
	   encoding="UTF-8"
	   includeAntRuntime="false"
	   debug="true"
           srcdir="src"
	   destdir="bin"
	   classpath="${processing.dir}/core/bin;
                      ${processing.dir}/app/bin;
                      ${processing.dir}/java/bin"
	   nowarn="true">
      <!-- kinda gross, but if not using the JDT, this just ignored anyway -->
      <compilerclasspath path="${jdt.jar}; ${processing.dir}/java/mode/jdtCompilerAdapter.jar" />
    </javac>

    <!-- make sure this exists -->
    <mkdir dir="mode" />

    <jar destfile="${jar.path}">
      <fileset dir="bin" />
    </jar>
  </target>

  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
  
  <target name="install" depends="build">
    <available file="examples" property="examples.exist" />
    <fail unless="examples.exist" message="First run the 'ant examples' target to get the examples folder ready." />

    <copy todir="${install.dir}/examples">
      <fileset dir="examples" />
    </copy>

    <copy todir="${install.dir}/libraries">
      <fileset dir="libraries" />
    </copy>

    <copy todir="${install.dir}/mode">
      <fileset dir="mode" />
    </copy>

    <copy todir="${install.dir}/template">
      <fileset dir="template" />
    </copy>

    <copy todir="${install.dir}">
      <fileset file="mode.properties" />
      <fileset file="keywords.txt" />
    </copy>
  </target>

  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

  <target name="examples" depends="build">
    <delete dir="examples" />
    <copy todir="examples/ESP">
      <fileset dir="${esp.dir}/Xcode/ESP/src/examples" />
    </copy>
  </target>

  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

  <target name="clean">
    <delete dir="${install.dir}" />
    <delete dir="bin" />
    <delete file="${jar.path}" />
    <delete dir="mode" />
    <delete file="${me}.zip" />
    <delete file="${me}.txt" />
    <delete dir="examples" />
  </target>

  <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

  <target name="dist" depends="build">
    <zip destfile="${dist.path}">
      <!-- This can probably be done more efficiently, no? How about a PR? -->
      <zipfileset dir="." prefix="p5jsMode" includes="examples/**" />
      <zipfileset dir="." prefix="p5jsMode" includes="keywords.txt" />
      <zipfileset dir="." prefix="p5jsMode" includes="libraries/**" />
      <zipfileset dir="." prefix="p5jsMode" includes="mode/**" />
      <zipfileset dir="." prefix="p5jsMode" includes="mode.properties" />
      <zipfileset dir="." prefix="p5jsMode" includes="template/**" />
    </zip>
    <copy file="mode.properties" tofile="${me}.txt" />
  </target>

</project>
